package main

import (
	"fmt"
	"net/url"
)

var MessageHandlers = map[string]func(msg Message){
	`^/start$`: sayHello,
	`(?i)–ë—Ä–∞—Ç–∏—à–∫–∞.*–ø–æ–¥—Å–∫–∞–∂–∏ –∑–∞–º–µ–Ω—ã`:              handleSubstitutionsRequest,
	`(?i)–ú–æ–ª–æ–¥–µ—Ü.*–±—Ä–∞—Ç–∏—à–∫–∞`:                      sayThankYou,
	`(?i)–°–ø–∞—Å–∏–±–æ.*–±—Ä–∞—Ç–∏—à–∫–∞`:                      sayPlease,
	`(?i)–ü—Ä–∏–≤–µ—Ç.*–±—Ä–∞—Ç–∏—à–∫–∞`:                       sayHello,
	`(?i)–ë—Ä–∞—Ç–∏—à–∫–∞.*–ø—Ä–∏–≤–µ—Ç`:                       sayHello,
	`(?i)–ë—Ä–∞—Ç–∏—à–∫–∞.*—Å–ø–∏—à—å?`:                       sayNoSleep,
	`(?i)–ë—Ä–∞—Ç–∏—à–∫–∞.*—Å–æ–æ–±—â–∏ –∫–æ–≥–¥–∞ –ø–æ—è–≤—è—Ç—Å—è –∑–∞–º–µ–Ω—ã`: watchUpdates,
	`(?i)–ë—Ä–∞—Ç–∏—à–∫–∞.*ID`:                           sayChatID,
	`(?i)–ü–ª–æ—Ö–æ–π.*–±—Ä–∞—Ç–∏—à–∫–∞`:                       sayWasOffensively,
	`(?i)–ß—Ç–æ –≤—ã\?`:                               sayThinking,
	`(?i)–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏`:                         sayGoodNight,
	`(?i)–°–ø–∏—Ç–µ\?`:                                saySleeping,
}

func sayHello(msg Message) {
	text := fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, %v üôÇ", msg.From.FirstName)
	SendMessage(text, msg.Chat.ID)
}

func handleSubstitutionsRequest(msg Message) {
	SendSubstitutions(msg.Chat.ID)
}

func SendSubstitutions(chatID int) {
	message, err := GetSubstitutions()
	if err != nil {
		SendMessage("–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòê", chatID)
		return
	}
	p := url.Values{
		"chat_id":    {fmt.Sprintf("%v", chatID)},
		"text":       {message},
		"parse_mode": {"Markdown"},
	}
	MakeTgapiRequest("sendMessage", p)
}

func sayThankYou(msg Message) {
	text := fmt.Sprintf("–°–ø–∞—Å–∏–±–æ %v, —Ç—ã —Ç–æ–∂–µ –Ω–∏—á–µ–≥–æ ü§ó", msg.From.FirstName)
	SendMessage(text, msg.Chat.ID)
}

func sayPlease(msg Message) {
	SendMessage("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ üòâ", msg.Chat.ID)
}

func sayNoSleep(msg Message) {
	SendMessage("–Ø –Ω–µ —Å–ø–ª—é, —è –¥—É–º–∞—é ü§î", msg.Chat.ID)
}

func watchUpdates(msg Message) {
	SendMessage("–•–æ—Ä–æ—à–æ üòä", msg.Chat.ID)
}

func sayChatID(msg Message) {
	chatID := msg.Chat.ID
	messageText := fmt.Sprintf("–í–æ—Ç, –¥–µ—Ä–∂–∏ %v üôÉ", chatID)
	SendMessage(messageText, chatID)
}

func sayWasOffensively(msg Message) {
	SendMessage(fmt.Sprintf("–ê –≤–æ—Ç —Å–µ–π—á–∞—Å –æ–±–∏–¥–Ω–æ –±—ã–ª–æ üò•"), msg.Chat.ID)
}

func sayThinking(msg Message) {
	SendMessage("–î—É–º–∞–µ–º ü§î", msg.Chat.ID)
}

func sayGoodNight(msg Message) {
	SendMessage("–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ üòö", msg.Chat.ID)
}

func saySleeping(msg Message) {
	SendMessage("–°–ø–∏–º üò¥", msg.Chat.ID)
}
